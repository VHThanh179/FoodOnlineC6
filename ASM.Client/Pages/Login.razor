@page "/login"
@using System.Web;
@using System.Net;
@using Newtonsoft.Json
@using System.ComponentModel.DataAnnotations;
@layout WebLayout2;
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage
@inject Microsoft.Extensions.Configuration.IConfiguration config;
@inject IJSRuntime JSRuntime
@using ASM.Share.Models.ViewModels

@*<div class="col-md-4 offset-md-3 mt-5 ">
    <div class="card">
        <h4 class="card-header">Đăng nhập</h4>
        <div class="card-body">
            <div class="form-group">
                <input type="text" id="username" placeholder="Email" @bind="@email" class="form-control" />
            </div>
            <div class="form-group">
                <input type="password" id="password" placeholder="Password" @bind="@password" @onkeypress="Enter" class="form-control" />
            </div>
            <button class="ml-md-auto btn btn-primary" @onclick="CheckLogin">
                Login
            </button>
            @if (!string.IsNullOrEmpty(error))
            {
                <div class="alert alert-danger mt-3 mb-0">@((MarkupString)error)</div>
            }
        </div>
    </div>
</div>*@

<section id="login">
    <div class="container">
        <div class="section-header">
            <h3>ĐĂNG NHẬP</h3>
        </div>

        <div class="row text-center">
            <div class="col-md-6 mr-auto ml-auto">
                <div class="login-col-2">
                    <div class="login-form">
                        <div class="form-group">
                            <label asp-for="Email" class="font-weight-bold text-white"></label>
                            <input type="text" id="username" placeholder="Email" @bind="@email" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label asp-for="Password" class="font-weight-bold text-white"></label>
                            <input input type="password" id="password" placeholder="Password" @bind="@password" @onkeypress="Enter" class="form-control" />
                        </div>
                        <div class="form-group">
                            <button @onclick="CheckLogin">Đăng nhập</button>
                        </div>

                        @if (!string.IsNullOrEmpty(error))
                        {
                            <div class="alert alert-danger mt-3 mb-0">@((MarkupString)error)</div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private bool loading;
    private string error;
    string email = "";
    string password = "";
    private string name;
    protected override void OnInitialized()
    {

    }
    private string Encode(string param)
    {
        return HttpUtility.UrlEncode(param);
    }

    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            if (password != "")
            {
                CheckLogin();
            }
        }
    }
    private async Task CheckLogin()
    {
        error = "";
        if (email == "")
        {
            error = " - Bạn cần nhập email.";
        }
        if (password == "")
        {
            error += (error == "" ? "" : "<br/>") + " - Bạn cần nhập password.";
        }
        if (error == "")
        {
            var apiUrl = config.GetSection("API")["APIUrl"].ToString();
            using (var client = new HttpClient())
            {
                ViewWebLogin viewWebLogin = new ViewWebLogin() { Email = email, Password = password };
                client.DefaultRequestHeaders.Add("Access-Control-Alow-Origin", "*");
                StringContent content = new StringContent(JsonConvert.SerializeObject(viewWebLogin), System.Text.Encoding.UTF8,
                    "application/json");
                HttpResponseMessage response = await client.PostAsync(apiUrl + "Token", content);
                if (response.StatusCode != HttpStatusCode.OK)
                {
                    error += (error == "" ? "" : "<br/>") + "- Lỗi khi gọi API.";
                }
                else
                {
                    string apiResponse = await response.Content.ReadAsStringAsync();
                    var list = Newtonsoft.Json.JsonConvert.DeserializeObject<List<ViewToken>>(apiResponse);
                    if (list.Count > 0)
                    {


                        //listDonhang = model.DonhangChitiets;

                        //var viewToken = Newtonsoft.Json.JsonConvert.DeserializeObject<ViewToken>(apiResponse);
                        var viewToken = list[0];

                        var accessToken = viewToken.Token;
                        sessionStorage.SetItem("khachhangId", viewToken.KhachhangId);
                        sessionStorage.SetItem("Email", email);
                        sessionStorage.SetItem("AccessToken", accessToken);
                        //await JSRuntime.InvokeAsync<object>("refreshMenu", new { email = email });
                        NavigationManager.NavigateTo("/", true);

                    }
                }
            }

        }
    }
}
