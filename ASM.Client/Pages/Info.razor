@page "/info/{id}"
@using System.Net
@using ASM.Share.Models.ViewModels
@using Newtonsoft.Json;
@inject IJSRuntime JSRuntime
@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage
@inject Microsoft.Extensions.Configuration.IConfiguration config
@inject NavigationManager NavigationManager
@layout WebLayout2

@*<h3>Thông tin cá nhân</h3>
<div class="row">
    <div class="col-md-4">
        <EditForm Model="@model" OnValidSubmit="@SubmitForm">
            <DataAnnotationsValidator />
            <input type="hidden" @bind="model.KhachHangID" />
            <div class="form-group">
                <label class="control-label">Họ tên</label>
                <input @bind="model.FullName" class="form-control" />
                <ValidationMessage For="@(() => model.FullName)" />
            </div>

            <div class="form-group">
                <label class="control-label">Email</label>
                <input @bind="model.EmailKH" class="form-control" />
                <ValidationMessage For="@(() => model.EmailKH)" />
            </div>

            <div class="form-group">
                <label class="control-label">Ngày sinh</label>
                <input type="date" @bind="model.BirthDay" class="form-control" />
                <ValidationMessage For="@(() => model.BirthDay)" />
            </div>

            <div class="form-group">
                <label class="model.PhoneNumber">Số điện thoại</label>
                <input @bind="model.PhoneNumber" class="form-control" />
                <ValidationMessage For="@(() => model.PhoneNumber)" />
            </div>

            <div class="form-group">
                <label for="model.Address" class="control-label">Địa chỉ</label>
                <input @bind="model.Address" class="form-control" />
                <ValidationMessage For="@(() => model.Address)" />
            </div>

            <div class="form-group">
                <label for="model.Describe" class="control-label">Mô tả</label>
                <input @bind="model.Describe" class="form-control" />
                <ValidationMessage For="@(() => model.Describe)" />
            </div>


            <div class="form-group">
                <button type="submit" class="btn btn-info">Lưu</button>
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Thoát" />
            </div>
        </EditForm>
    </div>
</div>*@

<section id="login">
    <div class="container">
        <div class="section-header">
            <h3>Thông tin</h3>
        </div>

        <div class="row text-center">
            <div class="col-md-6 mr-auto ml-auto">
                <div class="login-col-1">
                    <div class="login-form">
                        <EditForm Model="@model" OnValidSubmit="@SubmitForm">
                            <DataAnnotationsValidator />
                            <input type="hidden" @bind="model.KhachHangID" />
                            <div class="form-group">
                                <label class="control-label">Họ tên</label>
                                <input @bind="model.FullName" class="form-control" />
                                <ValidationMessage For="@(() => model.FullName)" />
                            </div>

                            <div class="form-group">
                                <label class="control-label">Email</label>
                                <input @bind="model.EmailKH" class="form-control" />
                                <ValidationMessage For="@(() => model.EmailKH)" />
                            </div>

                            <div class="form-group">
                                <label class="control-label">Ngày sinh</label>
                                <input type="date" @bind="model.BirthDay" class="form-control" />
                                <ValidationMessage For="@(() => model.BirthDay)" />
                            </div>

                            <div class="form-group">
                                <label class="model.PhoneNumber">Số điện thoại</label>
                                <input @bind="model.PhoneNumber" class="form-control" />
                                <ValidationMessage For="@(() => model.PhoneNumber)" />
                            </div>

                            <div class="form-group">
                                <label for="model.Address" class="control-label">Địa chỉ</label>
                                <input @bind="model.Address" class="form-control" />
                                <ValidationMessage For="@(() => model.Address)" />
                            </div>

                            <div class="form-group">
                                <label for="model.Describe" class="control-label">Mô tả</label>
                                <input @bind="model.Describe" class="form-control" />
                                <ValidationMessage For="@(() => model.Describe)" />
                            </div>

                            @if (show)
                            {
                                <div class="form-group" >
                                    <label for="model.Password" class="control-label">Mật khẩu</label>
                                    <input @bind="model.Password" class="form-control" type="password"/>
                                </div>

                                <div class="form-group" >
                                    <label for="model.ConfirmPassword" class="control-label">Nhập lại mật khẩu</label>
                                    <input @bind="model.ConfirmPassword" class="form-control" type="password"/>
                                </div>
                            }

                            <div class="form-group">
                                <button type="submit">Lưu</button>
                                <input type="button" @onclick="@Cancel" value="Thoát" />
                                <input type="button" value="Đổi mật khẩu"  @onclick="ChangeDisplay"/>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@code {
    [Parameter]
    public string id { get; set; }

    protected string imgUrl = "";
    protected string temp = "";
    public KhachHang model;

    public bool show = false;

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrWhiteSpace(id) || id == "0")
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            var apiUrl = config.GetSection("API")["APIUrl"].ToString();
            imgUrl = config.GetSection("API")["ImgUrl"].ToString();
            var accessToken = sessionStorage.GetItem<string>("AccessToken");
            model = new KhachHang();
            using (var client = new HttpClient())
            {
                client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
                client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
                client.BaseAddress = new Uri(apiUrl);
                using (var response = await client.GetAsync("KhachHang/?id=" + id))
                {
                    string apiResponse = await response.Content.ReadAsStringAsync();
                    model = JsonConvert.DeserializeObject<KhachHang>(apiResponse);
                    model.Password = string.Empty;
                    model.ConfirmPassword = string.Empty;
                }
            }
        }
    }

    private async void SubmitForm()
    {
        var apiUrl = config.GetSection("API")["APIUrl"].ToString();
        var accessToken = sessionStorage.GetItem<string>("AccessToken");
        var khachhangId = sessionStorage.GetItem<int>("khachhangId");
        using (var client = new HttpClient())
        {
            client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
            StringContent content = new StringContent(JsonConvert.SerializeObject(model), System.Text.Encoding.UTF8, "application/json");
            client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
            HttpResponseMessage response = await client.PutAsync(apiUrl + $"KhachHang/{khachhangId}", content);

            if (response.StatusCode != HttpStatusCode.OK)
            {

            }
            else
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                if (apiResponse == "-1")
                {

                }
                else
                {
                    NavigationManager.NavigateTo("/", true);
                }
            }
        }

    }

    private void ChangeDisplay()
    {
        if (!show)
            show = true;
        else 
            show = false;
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/", true);
    }
}
